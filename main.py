import os
import json
import gspread
import requests
from oauth2client.service_account import ServiceAccountCredentials

print("üß™ Lancement script complet - Lecture + Message Telegram")

# === Variables d'environnement ===
BOT_TOKEN = os.getenv("TELEGRAM_TOKEN")
CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")
SHEET_NAME = "RE - Gestion"
raw_creds = os.getenv("GOOGLE_SHEET_CREDENTIALS_JSON")

# === Authentification Google Sheets ===
try:
    creds_dict = json.loads(raw_creds)
    scope = ['https://spreadsheets.google.com/feeds', 'https://www.googleapis.com/auth/drive']
    creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
    client = gspread.authorize(creds)
    print("‚úÖ Authentification r√©ussie")
except Exception as e:
    print("‚ùå Erreur d'authentification :", e)
    exit(1)

# === Acc√®s √† la feuille Interface ===
try:
    spreadsheet = client.open(SHEET_NAME)
    print(f"‚úÖ Fichier ouvert : {spreadsheet.title}")

    worksheets = spreadsheet.worksheets()
    print("üóÇÔ∏è Onglets disponibles :", [ws.title for ws in worksheets])

    sheet = spreadsheet.worksheet("Interface")
    rows = sheet.get_all_values()
    nb_rows = len(rows) - 1  # ignore l'en-t√™te

    if nb_rows <= 0:
        message = "‚ö†Ô∏è Feuille 'Interface' vide ou en-t√™te seul."
    else:
        aper√ßu = ", ".join(rows[1][:4])  # 4 premi√®res colonnes de la premi√®re ligne de donn√©es
        message = f"‚úÖ Lecture r√©ussie : {nb_rows} ligne(s) trouv√©e(s).\nüëÅÔ∏è Aper√ßu ligne 1 : {aper√ßu}"

except Exception as e:
    message = f"‚ùå Erreur lors de l'acc√®s √† la feuille 'Interface' :\n{str(e)}"
    print(message)

# === Envoi Telegram ===
try:
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    payload = {"chat_id": CHAT_ID, "text": message}
    response = requests.post(url, data=payload)
    print(f"üì§ Message Telegram envoy√© : {response.status_code}")
except Exception as e:
    print("‚ùå Erreur d‚Äôenvoi Telegram :", e)
